name: Deploy to AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      package_name: pkrsplitter
      package_image: ${{ secrets.ECR_REPOSITORY_URI }}/pkrsplitter:latest
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
      run: |
        docker build -t $ECR_REPOSITORY/${{ env.package_name }}:latest .
        docker push $ECR_REPOSITORY:latest

#    - name: Deploy to AWS Lambda
#      uses: appleboy/lambda-action@master
#      with:
#        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws_region: ${{ secrets.AWS_REGION }}
#        function_name: my-lambda-function  # Remplacez par le nom de votre fonction Lambda
#        zip_file: path_to_your_deployment_package.zip  # Chemin vers le fichier zip si n√©cessaire
#        handler_name: pkrsplitter.lambda.history_splitter.lambda_handler  # Nom du handler
#
